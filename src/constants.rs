//! Constants used throughout the gcrypt library.
//!
//! This module contains important mathematical constants such as
//! curve parameters, basepoints, and other precomputed values.

use crate::scalar::Scalar;
use crate::field::FieldElement;

/// The order of the Curve25519 group.
///
/// This is l = 2^252 + 27742317777372353535851937790883648493.
pub const BASEPOINT_ORDER: Scalar = Scalar {
    bytes: [
        0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,
        0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    ],
};

/// The order of the Curve25519 group minus one.
pub const BASEPOINT_ORDER_MINUS_ONE: Scalar = Scalar {
    bytes: [
        0xec, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,
        0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    ],
};

/// The Ed25519 basepoint.
///
/// This is the standard generator for the Ed25519 curve.
pub const ED25519_BASEPOINT_COMPRESSED: [u8; 32] = [
    0x58, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
    0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
    0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
    0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x58,
];

/// The X25519 basepoint (u-coordinate).
pub const X25519_BASEPOINT: [u8; 32] = [
    0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

/// The Ristretto255 basepoint.
pub const RISTRETTO255_BASEPOINT_COMPRESSED: [u8; 32] = [
    0xe2, 0xf2, 0xae, 0x0a, 0x6a, 0xbc, 0x4e, 0x71,
    0xa8, 0x84, 0xa9, 0x61, 0xc5, 0x00, 0x51, 0x5f,
    0x58, 0xe3, 0x0b, 0x6a, 0xa5, 0x82, 0xdd, 0x8d,
    0xb6, 0xa6, 0x59, 0x45, 0xe0, 0x8d, 0x2d, 0x76,
];

/// Edwards curve parameter d = -121665/121666.
pub const EDWARDS_D: FieldElement = FieldElement(crate::backend::FieldImpl::EDWARDS_D);

/// Edwards curve parameter d2 = 2*d.
pub const EDWARDS_D2: FieldElement = FieldElement(crate::backend::FieldImpl::EDWARDS_D2);

/// Montgomery curve parameter A = 486662.
pub const MONTGOMERY_A: FieldElement = FieldElement(crate::backend::FieldImpl::MONTGOMERY_A);

/// Montgomery curve parameter A + 2.
pub const MONTGOMERY_A_PLUS_2: FieldElement = FieldElement(crate::backend::FieldImpl::MONTGOMERY_A_PLUS_2);

/// Invsqrt(-486664) for use in point compression/decompression.
pub const INVSQRT_A_MINUS_D: FieldElement = FieldElement(crate::backend::FieldImpl::INVSQRT_A_MINUS_D);

/// sqrt(-1) in the field.
pub const SQRT_M1: FieldElement = FieldElement(crate::backend::FieldImpl::SQRT_M1);

/// The cofactor of the Edwards curve (8).
pub const COFACTOR: [u8; 32] = [
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

